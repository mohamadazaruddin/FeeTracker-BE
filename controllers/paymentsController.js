// Code Generated by Sidekick is for learning and experimentation purposes only.
const Payment = require("../models/payment");
const Student = require("../models/student");

exports.createPayment = async (req, res) => {
  try {
    const { studentId, amount } = req.body;
    const payment = new Payment(req.body);
    await payment.save();

    // Update student's feePaid
    const student = await Student.findById(studentId);
    if (!student) return res.status(404).json({ error: "Student not found" });
    student.feePaid += amount;
    await student.save();

    res.status(201).json(payment);
  } catch (err) {
    res.status(400).json({ error: err.message });
  }
};

exports.getPaymentsByStudent = async (req, res) => {
  try {
    const payments = await Payment.find({
      studentId: req.params.studentId,
    }).populate("studentId");

    let student = null;

    if (payments.length) {
      student = payments[0].studentId;
      const paymentsArray = payments.map((payment) => ({
        _id: payment._id,
        amount: payment.amount,
        method: payment.method,
        remarks: payment.remarks,
        paymentDate: payment.paymentDate,
      }));

      res.json({
        student,
        payments: paymentsArray,
      });
    } else {
      student = await Student.findById(req.params.studentId);
      if (!student) {
        return res.status(404).json({ error: "Student not found." });
      }
      res.json({
        student,
        payments: [],
      });
    }
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
};
